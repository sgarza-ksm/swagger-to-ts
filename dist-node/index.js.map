{"version":3,"file":"index.js","sources":["../dist-src/swagger-2.js","../dist-src/swagger-3.js","../dist-src/index.js"],"sourcesContent":["import * as prettier from 'prettier';\nexport const warningMessage = `\n/**\n * This file was auto-generated by swagger-to-ts.\n * Do not make direct changes to the file.\n */\n`;\nconst TYPES = {\n    string: 'string',\n    integer: 'number',\n    number: 'number',\n};\nfunction capitalize(str) {\n    return `${str[0].toUpperCase()}${str.slice(1)}`;\n}\nfunction camelCase(name) {\n    return name.replace(/(-|_|\\.|\\s)+\\w/g, (letter) => letter.toUpperCase().replace(/[^0-9a-z]/gi, ''));\n}\nfunction sanitize(name) {\n    return name.includes('-') ? `'${name}'` : name;\n}\nfunction parse(spec, options = {}) {\n    const shouldUseWrapper = options.wrapper !== false;\n    const wrapper = typeof options.wrapper === 'string' && options.wrapper\n        ? options.wrapper\n        : 'declare namespace OpenAPI2';\n    const shouldCamelCase = options.camelcase || false;\n    const shouldInsertWarning = options.injectWarning || false;\n    const queue = [];\n    const output = [];\n    if (shouldInsertWarning) {\n        output.push(warningMessage);\n    }\n    if (wrapper && shouldUseWrapper) {\n        output.push(`${wrapper} {`);\n    }\n    const { definitions } = spec;\n    function getRef(lookup) {\n        const ID = lookup.replace('#/definitions/', '');\n        const ref = definitions[ID];\n        return [ID, ref];\n    }\n    function getType(definition, nestedName) {\n        const { $ref, items, type, ...value } = definition;\n        const nextInterface = camelCase(nestedName);\n        const DEFAULT_TYPE = 'any';\n        if ($ref) {\n            const [refName, refProperties] = getRef($ref);\n            if (refProperties.items && refProperties.items.$ref) {\n                return getType(refProperties, refName);\n            }\n            if (refProperties.type && TYPES[refProperties.type]) {\n                return TYPES[refProperties.type];\n            }\n            return refName || DEFAULT_TYPE;\n        }\n        if (items && items.$ref) {\n            const [refName] = getRef(items.$ref);\n            return `${getType(items, refName)}[]`;\n        }\n        if (items && items.type) {\n            if (items.type === 'array') {\n                return `${getType(items, nestedName)}[]`;\n            }\n            if (TYPES[items.type]) {\n                return `${TYPES[items.type]}[]`;\n            }\n            queue.push([nextInterface, items]);\n            return `${nextInterface}[]`;\n        }\n        if (Array.isArray(value.oneOf)) {\n            return value.oneOf.map((def) => getType(def, '')).join(' | ');\n        }\n        if (value.properties) {\n            queue.push([nextInterface, { $ref, items, type, ...value }]);\n            return nextInterface;\n        }\n        if (type) {\n            return TYPES[type] || type || DEFAULT_TYPE;\n        }\n        return DEFAULT_TYPE;\n    }\n    function buildNextInterface() {\n        const nextObject = queue.pop();\n        if (!nextObject)\n            return;\n        const [ID, { allOf, properties, required, additionalProperties, type }] = nextObject;\n        let allProperties = properties || {};\n        const includes = [];\n        if (Array.isArray(allOf)) {\n            allOf.forEach((item) => {\n                if (item.$ref) {\n                    const [refName] = getRef(item.$ref);\n                    includes.push(refName);\n                }\n                else if (item.properties) {\n                    allProperties = { ...allProperties, ...item.properties };\n                }\n            });\n        }\n        if (!Object.keys(allProperties).length &&\n            additionalProperties !== true &&\n            type &&\n            TYPES[type]) {\n            return;\n        }\n        const isExtending = includes.length ? ` extends ${includes.join(', ')}` : '';\n        output.push(`export interface ${shouldCamelCase ? camelCase(ID) : ID}${isExtending} {`);\n        Object.entries(allProperties).forEach(([key, value]) => {\n            const optional = !Array.isArray(required) || required.indexOf(key) === -1;\n            const formattedKey = shouldCamelCase ? camelCase(key) : key;\n            const name = `${sanitize(formattedKey)}${optional ? '?' : ''}`;\n            const newID = `${ID}${capitalize(formattedKey)}`;\n            const interfaceType = getType(value, newID);\n            if (typeof value.description === 'string') {\n                output.push(`/**\\n* ${value.description.replace(/\\n$/, '').replace(/\\n/g, '\\n* ')}\\n*/`);\n            }\n            if (Array.isArray(value.enum)) {\n                output.push(`${name}: ${value.enum.map(option => JSON.stringify(option)).join(' | ')};`);\n                return;\n            }\n            output.push(`${name}: ${interfaceType};`);\n        });\n        if (additionalProperties) {\n            if (additionalProperties === true) {\n                output.push('[name: string]: any');\n            }\n            if (additionalProperties.type) {\n                const interfaceType = getType(additionalProperties, '');\n                output.push(`[name: string]: ${interfaceType}`);\n            }\n        }\n        output.push('}');\n    }\n    Object.entries(definitions).forEach((entry) => {\n        if (entry[1].type === 'object') {\n            queue.push(entry);\n        }\n    });\n    queue.sort((a, b) => a[0].localeCompare(b[0]));\n    while (queue.length > 0) {\n        buildNextInterface();\n    }\n    if (wrapper && shouldUseWrapper) {\n        output.push('}');\n    }\n    return prettier.format(output.join('\\n'), { parser: 'typescript', singleQuote: true });\n}\nexport default parse;\n//# sourceMappingURL=swagger-2.js.map","import * as prettier from 'prettier';\nexport const warningMessage = `\n/**\n * This file was auto-generated by swagger-to-ts.\n * Do not make direct changes to the file.\n */\n`;\nconst TYPES = {\n    string: 'string',\n    integer: 'number',\n    number: 'number',\n};\nfunction camelCase(name) {\n    return name.replace(/(-|_|\\.|\\s)+\\w/g, (letter) => letter.toUpperCase().replace(/[^0-9a-z]/gi, ''));\n}\nfunction pascal(name) {\n    return camelCase(name).replace(/[a-z]/, (letter) => letter.toUpperCase());\n}\nfunction noFormat(name) {\n    return name;\n}\nfunction sanitize(name) {\n    return name.includes('-') ? `'${name}'` : name;\n}\nfunction parse(spec, options = {}) {\n    const shouldUseWrapper = options.wrapper !== false;\n    const wrapper = typeof options.wrapper === 'string' && options.wrapper\n        ? options.wrapper\n        : 'declare namespace OpenAPI3';\n    const formatKey = (() => {\n        switch (options.format) {\n            case 'camel': return camelCase;\n            case 'pascal': return pascal;\n            default: return noFormat;\n        }\n    })();\n    const formatProperties = !!options.formatProperties;\n    const shouldInsertWarning = options.injectWarning || false;\n    const queue = [];\n    const output = [];\n    if (shouldInsertWarning) {\n        output.push(warningMessage);\n    }\n    if (wrapper && shouldUseWrapper) {\n        output.push(`${wrapper} {`);\n    }\n    const schemas = spec.components.schemas;\n    function getRef(lookup) {\n        const ID = lookup.replace('#/components/schemas/', '');\n        const ref = schemas[ID];\n        return [ID, ref];\n    }\n    function getType(schema, nestedName) {\n        const { $ref, items, type, nullable, ...value } = schema;\n        const nextInterface = camelCase(nestedName);\n        const DEFAULT_TYPE = 'any';\n        if ($ref) {\n            const [refName, refProperties] = getRef($ref);\n            if (refProperties.items && refProperties.items.$ref) {\n                return getType(refProperties, refName);\n            }\n            if (refProperties.type && TYPES[refProperties.type]) {\n                return TYPES[refProperties.type];\n            }\n            return refName ? `${wrapper.split(' ').pop()}.${refName}` : DEFAULT_TYPE;\n        }\n        if (items && items.$ref) {\n            const [refName] = getRef(items.$ref);\n            return `${getType(items, refName)}[]`;\n        }\n        if (items && items.type) {\n            if (items.type === 'array') {\n                return `${getType(items, nestedName)}[]`;\n            }\n            if (TYPES[items.type]) {\n                return `${TYPES[items.type]}[]`;\n            }\n            queue.push([nextInterface, items]);\n            return `${nextInterface}[]`;\n        }\n        if (Array.isArray(value.oneOf)) {\n            return value.oneOf.map((def) => getType(def, '')).join(' | ');\n        }\n        if (value.properties) {\n            queue.push([nextInterface, { $ref, items, type, ...value }]);\n            return nextInterface;\n        }\n        if (type) {\n            return TYPES[type] || type || DEFAULT_TYPE;\n        }\n        return DEFAULT_TYPE;\n    }\n    function buildNextInterface() {\n        const nextObject = queue.pop();\n        if (!nextObject)\n            return;\n        const [ID, { allOf, properties, required, additionalProperties, type }] = nextObject;\n        let allProperties = properties || {};\n        const includes = [];\n        if (Array.isArray(allOf)) {\n            allOf.forEach((item) => {\n                if (item.$ref) {\n                    const [refName] = getRef(item.$ref);\n                    includes.push(refName);\n                }\n                else if (item.properties) {\n                    allProperties = { ...allProperties, ...item.properties };\n                }\n            });\n        }\n        if (!Object.keys(allProperties).length &&\n            additionalProperties !== true &&\n            type &&\n            TYPES[type]) {\n            return;\n        }\n        const isExtending = includes.length ? ` extends ${includes.join(', ')}` : '';\n        output.push(`export interface ${formatKey(ID)}${isExtending} {`);\n        Object.entries(allProperties).forEach(([key, value]) => {\n            const isNonNullableString = value.type === 'string' && value.nullable === false;\n            const isOptional = !Array.isArray(required) || required.indexOf(key) === -1;\n            const formattedKey = formatProperties ? formatKey(key) : key;\n            const name = `${sanitize(formattedKey)}${isOptional && !isNonNullableString ? '?' : ''}`;\n            const newID = `${ID}${formattedKey}`;\n            const interfaceType = getType(value, newID);\n            if (typeof value.description === 'string') {\n                output.push(`/**\\n* ${value.description.replace(/\\n$/, '').replace(/\\n/g, '\\n* ')}\\n*/`);\n            }\n            if (Array.isArray(value.enum)) {\n                output.push(`${name}: ${value.enum.map(option => JSON.stringify(option)).join(' | ')};`);\n                return;\n            }\n            output.push(`${name}: ${interfaceType};`);\n        });\n        if (additionalProperties) {\n            if (additionalProperties === true) {\n                output.push('[name: string]: any');\n            }\n            if (additionalProperties.type) {\n                const interfaceType = getType(additionalProperties, '');\n                output.push(`[name: string]: ${interfaceType}`);\n            }\n        }\n        output.push('}');\n    }\n    Object.entries(schemas).forEach((entry) => {\n        if (entry[1].type === 'object') {\n            queue.push(entry);\n        }\n    });\n    queue.sort((a, b) => a[0].localeCompare(b[0]));\n    while (queue.length > 0) {\n        buildNextInterface();\n    }\n    if (wrapper && shouldUseWrapper) {\n        output.push('}');\n    }\n    return prettier.format(output.join('\\n'), { parser: 'typescript', singleQuote: true });\n}\nexport default parse;\n//# sourceMappingURL=swagger-3.js.map","import swagger2 from './swagger-2';\nimport swagger3 from './swagger-3';\nexport default function (spec, options) {\n    const swagger = (options && options.swagger) || 2;\n    if (swagger === 2) {\n        return swagger2(spec, options);\n    }\n    if (swagger === 3) {\n        return swagger3(spec, options);\n    }\n    throw new Error(`Swagger version ${swagger} is not supported`);\n}\n//# sourceMappingURL=index.js.map"],"names":["prettier.format","warningMessage","TYPES","camelCase","sanitize","parse","swagger2","swagger3"],"mappings":"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"}